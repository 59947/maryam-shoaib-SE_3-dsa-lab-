TASK 1:



#include <iostream>
using namespace std;
struct Node
{
	int data;
	Node *next;
	Node *prev;
};
Node *head =NULL;
void insert(int n)
{
	Node *newNode = new Node;
	newNode-> data = n;
	newNode-> next = head; 
	newNode-> prev = NULL;
	if ( head!=NULL)
	{
		head->prev =newNode;
	}
	head = newNode;
}
void print()
{
	cout<<"data elements in the list are:";
	Node *temp = head;
	while ( temp!=NULL)
	{
		cout<<temp->data<<" ";
		temp = temp -> next;
	}
}

void DeleteAtBeginning()
{
	if( head== NULL)
	{
	cout<<" the list is empty:";
return;
}
Node * temp= head;
head = head->next;
if( head!= NULL)
{
	head-> prev = NULL;
}
delete temp;

}
int main()

{
insert(5);
insert(4);
insert(3);
insert(2);
insert(1);
print();
DeleteAtBeginning();
print();
return 0;
}





TASK 2: 


#include <iostream>
using namespace std;

struct Node {
    int data;
    Node *next;
    Node *prev;
};

Node *head = NULL;

void insert(int n) {
    Node *newNode = new Node;
    newNode->data = n;
    newNode->next = head;
    newNode->prev = NULL;
    if (head != NULL) {
        head->prev = newNode;
    }
    head = newNode;
}

void print() {
    cout << "Data elements in the list are: ";
    Node *temp = head;
    while (temp != NULL) {
        cout << temp->data << " ";
        temp = temp->next;
    }
}

void deleteAtSpecificPoint(int pos) {
    if (head == NULL) {
        cout << "The list is empty.";
        return;
    }
    if (pos == 0) {
        Node *temp = head;
        head = head->next;
        if (head != NULL) {
            head->prev = NULL;
        }
        delete temp;
        return;
    }
    Node *temp = head;
    for (int i = 0; i < pos - 1; i++) {
        temp = temp->next;
    }
    if (temp->next == NULL) {
        return;
    }
    Node *nodeToDelete = temp->next;
    temp->next = nodeToDelete->next;
    if (nodeToDelete->next != NULL) {
        nodeToDelete->next->prev = temp;
    }
    delete nodeToDelete;
}

int main() {
    insert(5);
    insert(4);
    insert(3);
    insert(2);
    insert(1);
    print();
    cout << endl;
    deleteAtSpecificPoint(2);
    print();
    return 0;
}




TASK 3: 


#include <iostream>
using namespace std;

struct Node {
    int data;
    Node* next;
};

Node* head = NULL;

void insert(int n) {
    Node* newNode = new Node;
    newNode->data = n;
    newNode->next = head;
    head = newNode;
}

void print() {
    cout << "Data elements in the list are: ";
    Node* temp = head;
    while (temp != NULL) {
        cout << temp->data << " ";
        temp = temp->next;
    }
    cout << endl;
}

void deleteAtEnd() {
    if (head == NULL) {
        cout << "The list is empty." << endl;
        return;
    }
    if (head->next == NULL) {
        delete head;
        head = NULL;
        return;
    }
    Node* temp = head;
    while (temp->next->next != NULL) {
        temp = temp->next;
    }
    delete temp->next;
    temp->next = NULL;
}

int main() {
    insert(5);
    insert(4);
    insert(3);
    insert(2);
    insert(1);
    print();
    deleteAtEnd();
    print();
    return 0;
}
